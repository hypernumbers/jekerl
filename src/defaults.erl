%%% @author    Gordon Guthrie
%%% @copyright (C) 2013, Gordon Guthrie
%%% @doc       page defaults for Jekerl site builder
%%%
%%% @end
%%% Created :  21st October 2013 by gordonguthrie@backawinner.gg

-module(defaults).

-export([
         doctype/0,
         layout/6,
         crumbs/2,
         signature/0,
         title/1,
         meta/1,
         css/1,
         js_head/1,
         js_foot/1,
         footer/0,
         blog_dir/1,
         blank_page/0,
         headline/2,
         lede/1,
         make_navigation/1,
         make_sidebar/1
        ]).

-include("jekerl.hrl").

-define(CSS,    [
                 "_assets/css/jekerl.css",
                 "_assets/fonts/shinn/stylesheet.css",
                 "_assets/css/traditional.css"
                 % "_assets/css/
                ]).
-define(JSHEAD, []).
-define(JSFOOT, [
                 "_assets/jquery/jquery-1.10.2.min.js",
                 "_assets/js/jekerl.js"
                ]).

%%%
%%% API
%%%

doctype() ->
    "<!DOCTYPE html>".

layout(Headline, Main, Navigation, Crumbs, Sidebar, Footer) ->
    Headline2 = html:header(Headline),
    Nav = html:nav([Navigation], "", ["menu"]),
    Crms = html:nav([Crumbs]),
    Article = html:article([Main]),
    Aside = html:aside(Sidebar),
    % [Nav, Crumbs, Article, Aside, Footer].
    [Nav, Crms, Headline2, Article, Aside, Footer].

crumbs(Dir, File) ->
    crumbs2(Dir, File, [], []).

signature() ->
    "<!--Generated by jekerl using the default format -->\n" ++
        "<!-- http://github.com/hypernumbers/jekerl --!>\n".

title(Title) ->
    html:title(Title).

meta(Additional) when is_list(Additional) ->
    Meta = "<meta charset=utf-8' />\n" ++
        "<meta name='viewport' content='device-width, initial-scale=1', maximum-scale=1.0, user-scalable=0'>\n",
    case Additional of
        [] -> Meta;
        _  -> lists:flatten([Meta | Additional])
    end.

css(Additional) when is_list(Additional) ->
    List = lists:merge([?CSS, Additional]),
    make_css(List, []).

js_head(Additional) when is_list(Additional) ->
    List = lists:merge([?JSHEAD, Additional]),
    make_js(List, []).

js_foot(Additional) when is_list(Additional) ->
    List = lists:merge([?JSFOOT, Additional]),
    make_js(List, []).

footer() ->
    html:p(["some bloody footer here please..."], [], "clear").

%% gets data in - returns directory structure
blog_dir(#page{date = {{Year, Month, _Day}, _}}) ->
    [
     integer_to_list(Year),
     month(Month)
    ].

%% message to be written on blank page (returns html)
blank_page() ->
    html:dv("This page left intentionally blank").

headline(Headline, Lede) ->
    [
     html:h1(Headline, [], "headline"),
     html:p(Lede, [], "lede")
    ].

lede(Lede) ->
    html:p(Lede, [], "lede").

%% makes the navigation line
make_navigation(Nav) ->
    Hamburger = html:a("#menu", "Menu", "Menu", "navmenu"),
    lists:flatten([Hamburger | make_n2(Nav, [])]).

make_n2([], []) ->
    [];
make_n2([], Acc) ->
    html:ul(lists:flatten(lists:reverse(Acc)));
make_n2([#navigation{dir = Dir, file = File, subnav = SN} | T], Acc) ->
    SN2 = make_n2(SN, []),
    URL = Dir ++ "/" ++ File,
    Menu = make_site:normalise(File),
    Menu2= case Menu of
               [] -> "Home";
               _  -> Menu
           end,
    NewAcc = case SN2 of
                 [] -> html:li([html:a(URL, Menu2)]);
                 _  -> html:li([html:a(URL, Menu2) | SN2])
             end,
    make_n2(T, [NewAcc | Acc]).

%% makes the sidebar
make_sidebar(SB) ->
    SortFun = fun(#sidebar{date = D1}, #sidebar{date = D2}) ->
                      D1 < D2
              end,
    SB2 = lists:sort(SortFun, SB),
    %% this is now reverse chronological order
    html:dv(lists:flatten([html:h2("Archive") | make_sb(SB2, [])])).

make_sb([], Acc) ->
    lists:flatten(Acc);
make_sb([H | T], Acc) ->
    #sidebar{title = Title,
             url = URL,
             date = {{Year, Month, Day}, _},
             author = Author} = H,
    NewAcc = html:dv([
                      html:h3([
                               html:a(URL, Title)
                              ]),
                      html:p([Author]),
                      html:p([
                              day(Day),
                              " ",
                              month(Month),
                              " ",
                              integer_to_list(Year)
                             ])
                     ]),
    make_sb(T, [NewAcc | Acc]).

%%%
%%% Internal fns
%%%
day(1)  -> "1st";
day(2)  -> "2nd";
day(3)  -> "3rd";
day(4)  -> "4th";
day(5)  -> "5th";
day(6)  -> "6th";
day(7)  -> "7th";
day(8)  -> "8th";
day(9)  -> "9th";
day(10) -> "10th";
day(11) -> "11th";
day(12) -> "12th";
day(13) -> "13th";
day(14) -> "14th";
day(15) -> "15th";
day(16) -> "16th";
day(17) -> "17th";
day(18) -> "18th";
day(19) -> "19th";
day(20) -> "20th";
day(21) -> "21st";
day(22) -> "22nd";
day(23) -> "23rd";
day(24) -> "24th";
day(25) -> "25th";
day(26) -> "26th";
day(27) -> "27th";
day(28) -> "28th";
day(29) -> "29th";
day(30) -> "30th";
day(31) -> "31st".

month(1)  -> "January";
month(2)  -> "February";
month(3)  -> "March";
month(4)  -> "April";
month(5)  -> "May";
month(6)  -> "June";
month(7)  -> "July";
month(8)  -> "August";
month(9)  -> "September";
month(10) -> "October";
month(11) -> "November";
month(12) -> "December".

make_css([],      Acc) -> string:join(lists:reverse(Acc), "\n");
make_css([H | T], Acc) -> NewA = "<link rel='stylesheet' href='" ++ H ++ "' />",
                          make_css(T, [NewA | Acc]).

make_js([],      Acc) -> string:join(lists:reverse(Acc), "\n");
make_js([H | T], Acc) -> NewAcc = "<script src='" ++ H ++ "'></script>",
                         make_js(T, [NewAcc | Acc]).

crumbs2([], File, RevPath, Acc) ->
    URL = string:join(lists:reverse(RevPath), "/") ++ "/" ++ File,
    Text = make_site:normalise(File),
    A = html:a(URL, Text),
    string:join(lists:reverse([A | Acc]), " > ");
crumbs2([H | T], File, RevPath, Acc) ->
    H2 = make_site:normalise(H),
    URL = string:join(lists:reverse([H | RevPath]), "/") ++ "/" ++ "index.html",
    A = html:a(URL, H2),
    crumbs2(T, File, [H | RevPath], [A | Acc]).
